// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dashboard controls should render 1`] = `
<DashboardControls
  dashboardId=""
  dashboardTitle=""
  endDate=""
  setEndDate={[Function]}
  setStartDate={[Function]}
  showFlyout={[Function]}
  startDate=""
>
  <EuiFlexGroup
    gutterSize="s"
    justifyContent="spaceBetween"
  >
    <div
      className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
    >
      <EuiFlexItem
        grow={true}
      >
        <div
          className="euiFlexItem"
        >
          <EuiText
            size="s"
          >
            <div
              className="euiText euiText--small"
            >
              <EuiLink
                onClick={[Function]}
              >
                <button
                  className="euiLink euiLink--primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  <h2 />
                </button>
              </EuiLink>
            </div>
          </EuiText>
        </div>
      </EuiFlexItem>
      <EuiFlexItem
        grow={false}
      >
        <div
          className="euiFlexItem euiFlexItem--flexGrowZero"
        >
          <EuiFlexGroup
            alignItems="center"
            gutterSize="s"
            justifyContent="flexEnd"
          >
            <div
              className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentFlexEnd euiFlexGroup--directionRow euiFlexGroup--responsive"
            >
              <EuiFlexItem
                grow={false}
              >
                <div
                  className="euiFlexItem euiFlexItem--flexGrowZero"
                >
                  <EuiSuperDatePicker
                    commonlyUsedRanges={
                      Array [
                        Object {
                          "end": "now/d",
                          "label": "Today",
                          "start": "now/d",
                        },
                        Object {
                          "end": "now/w",
                          "label": "This week",
                          "start": "now/w",
                        },
                        Object {
                          "end": "now/M",
                          "label": "This month",
                          "start": "now/M",
                        },
                        Object {
                          "end": "now/y",
                          "label": "This year",
                          "start": "now/y",
                        },
                        Object {
                          "end": "now-1d/d",
                          "label": "Yesterday",
                          "start": "now-1d/d",
                        },
                        Object {
                          "end": "now",
                          "label": "Week to date",
                          "start": "now/w",
                        },
                        Object {
                          "end": "now",
                          "label": "Month to date",
                          "start": "now/M",
                        },
                        Object {
                          "end": "now",
                          "label": "Year to date",
                          "start": "now/y",
                        },
                      ]
                    }
                    compressed={true}
                    dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
                    end=""
                    isAutoRefreshOnly={false}
                    isDisabled={false}
                    isPaused={true}
                    onTimeChange={[Function]}
                    recentlyUsedRanges={Array []}
                    refreshInterval={0}
                    showUpdateButton={true}
                    start=""
                    timeFormat="HH:mm"
                  >
                    <EuiFlexGroup
                      className="euiSuperDatePicker__flexWrapper"
                      gutterSize="s"
                      responsive={false}
                    >
                      <div
                        className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--directionRow euiSuperDatePicker__flexWrapper"
                      >
                        <EuiFlexItem>
                          <div
                            className="euiFlexItem"
                          >
                            <EuiFormControlLayout
                              className="euiSuperDatePicker"
                              compressed={true}
                              isDisabled={false}
                              prepend={
                                <EuiQuickSelectPopover
                                  applyTime={[Function]}
                                  commonlyUsedRanges={
                                    Array [
                                      Object {
                                        "end": "now/d",
                                        "label": "Today",
                                        "start": "now/d",
                                      },
                                      Object {
                                        "end": "now/w",
                                        "label": "This week",
                                        "start": "now/w",
                                      },
                                      Object {
                                        "end": "now/M",
                                        "label": "This month",
                                        "start": "now/M",
                                      },
                                      Object {
                                        "end": "now/y",
                                        "label": "This year",
                                        "start": "now/y",
                                      },
                                      Object {
                                        "end": "now-1d/d",
                                        "label": "Yesterday",
                                        "start": "now-1d/d",
                                      },
                                      Object {
                                        "end": "now",
                                        "label": "Week to date",
                                        "start": "now/w",
                                      },
                                      Object {
                                        "end": "now",
                                        "label": "Month to date",
                                        "start": "now/M",
                                      },
                                      Object {
                                        "end": "now",
                                        "label": "Year to date",
                                        "start": "now/y",
                                      },
                                    ]
                                  }
                                  dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
                                  end=""
                                  isAutoRefreshOnly={false}
                                  isDisabled={false}
                                  isPaused={true}
                                  recentlyUsedRanges={Array []}
                                  refreshInterval={0}
                                  start=""
                                />
                              }
                            >
                              <div
                                className="euiFormControlLayout euiFormControlLayout--compressed euiFormControlLayout--group euiSuperDatePicker"
                              >
                                <EuiQuickSelectPopover
                                  applyTime={[Function]}
                                  className="euiFormControlLayout__prepend"
                                  commonlyUsedRanges={
                                    Array [
                                      Object {
                                        "end": "now/d",
                                        "label": "Today",
                                        "start": "now/d",
                                      },
                                      Object {
                                        "end": "now/w",
                                        "label": "This week",
                                        "start": "now/w",
                                      },
                                      Object {
                                        "end": "now/M",
                                        "label": "This month",
                                        "start": "now/M",
                                      },
                                      Object {
                                        "end": "now/y",
                                        "label": "This year",
                                        "start": "now/y",
                                      },
                                      Object {
                                        "end": "now-1d/d",
                                        "label": "Yesterday",
                                        "start": "now-1d/d",
                                      },
                                      Object {
                                        "end": "now",
                                        "label": "Week to date",
                                        "start": "now/w",
                                      },
                                      Object {
                                        "end": "now",
                                        "label": "Month to date",
                                        "start": "now/M",
                                      },
                                      Object {
                                        "end": "now",
                                        "label": "Year to date",
                                        "start": "now/y",
                                      },
                                    ]
                                  }
                                  dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
                                  end=""
                                  isAutoRefreshOnly={false}
                                  isDisabled={false}
                                  isPaused={true}
                                  key="0/.0"
                                  recentlyUsedRanges={Array []}
                                  refreshInterval={0}
                                  start=""
                                >
                                  <EuiPopover
                                    anchorClassName="euiQuickSelectPopover__anchor"
                                    anchorPosition="downLeft"
                                    button={
                                      <EuiButtonEmpty
                                        aria-label="Date quick select"
                                        className="euiFormControlLayout__prepend"
                                        data-test-subj="superDatePickerToggleQuickMenuButton"
                                        iconSide="right"
                                        iconType="arrowDown"
                                        isDisabled={false}
                                        onClick={[Function]}
                                        size="xs"
                                        textProps={
                                          Object {
                                            "className": "euiQuickSelectPopover__buttonText",
                                          }
                                        }
                                      >
                                        <EuiIcon
                                          type="calendar"
                                        />
                                      </EuiButtonEmpty>
                                    }
                                    closePopover={[Function]}
                                    display="inlineBlock"
                                    hasArrow={true}
                                    isOpen={false}
                                    ownFocus={true}
                                    panelPaddingSize="s"
                                  >
                                    <div
                                      className="euiPopover euiPopover--anchorDownLeft"
                                    >
                                      <div
                                        className="euiPopover__anchor euiQuickSelectPopover__anchor"
                                      >
                                        <EuiButtonEmpty
                                          aria-label="Date quick select"
                                          className="euiFormControlLayout__prepend"
                                          data-test-subj="superDatePickerToggleQuickMenuButton"
                                          iconSide="right"
                                          iconType="arrowDown"
                                          isDisabled={false}
                                          onClick={[Function]}
                                          size="xs"
                                          textProps={
                                            Object {
                                              "className": "euiQuickSelectPopover__buttonText",
                                            }
                                          }
                                        >
                                          <button
                                            aria-label="Date quick select"
                                            className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiFormControlLayout__prepend"
                                            data-test-subj="superDatePickerToggleQuickMenuButton"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <EuiButtonContent
                                              className="euiButtonEmpty__content"
                                              iconGap="m"
                                              iconSide="right"
                                              iconSize="s"
                                              iconType="arrowDown"
                                              textProps={
                                                Object {
                                                  "className": "euiButtonEmpty__text euiQuickSelectPopover__buttonText",
                                                }
                                              }
                                            >
                                              <span
                                                className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                              >
                                                <EuiIcon
                                                  className="euiButtonContent__icon"
                                                  color="inherit"
                                                  size="s"
                                                  type="arrowDown"
                                                >
                                                  <EuiIconBeaker
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--small euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                                    focusable="false"
                                                    role="img"
                                                    style={null}
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="euiIcon euiIcon--small euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                                      focusable="false"
                                                      height={16}
                                                      role="img"
                                                      style={null}
                                                      viewBox="0 0 16 16"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                      />
                                                    </svg>
                                                  </EuiIconBeaker>
                                                </EuiIcon>
                                                <span
                                                  className="euiButtonEmpty__text euiQuickSelectPopover__buttonText"
                                                >
                                                  <EuiIcon
                                                    type="calendar"
                                                  >
                                                    <EuiIconBeaker
                                                      aria-hidden={true}
                                                      className="euiIcon euiIcon--medium euiIcon-isLoading"
                                                      focusable="false"
                                                      role="img"
                                                      style={null}
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="euiIcon euiIcon--medium euiIcon-isLoading"
                                                        focusable="false"
                                                        height={16}
                                                        role="img"
                                                        style={null}
                                                        viewBox="0 0 16 16"
                                                        width={16}
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                        />
                                                      </svg>
                                                    </EuiIconBeaker>
                                                  </EuiIcon>
                                                </span>
                                              </span>
                                            </EuiButtonContent>
                                          </button>
                                        </EuiButtonEmpty>
                                      </div>
                                    </div>
                                  </EuiPopover>
                                </EuiQuickSelectPopover>
                                <div
                                  className="euiFormControlLayout__childrenWrapper"
                                >
                                  <EuiDatePickerRange
                                    className="euiDatePickerRange--inGroup"
                                    endDateControl={
                                      <EuiDatePopoverButton
                                        compressed={true}
                                        dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
                                        isDisabled={false}
                                        isInvalid={true}
                                        isOpen={false}
                                        needsUpdating={false}
                                        onChange={[Function]}
                                        onPopoverClose={[Function]}
                                        onPopoverToggle={[Function]}
                                        position="end"
                                        roundUp={true}
                                        timeFormat="HH:mm"
                                        value=""
                                      />
                                    }
                                    iconType={false}
                                    isCustom={true}
                                    startDateControl={
                                      <EuiDatePopoverButton
                                        className="euiSuperDatePicker__startPopoverButton euiSuperDatePicker__startPopoverButton--compressed"
                                        compressed={true}
                                        dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
                                        isDisabled={false}
                                        isInvalid={true}
                                        isOpen={false}
                                        needsUpdating={false}
                                        onChange={[Function]}
                                        onPopoverClose={[Function]}
                                        onPopoverToggle={[Function]}
                                        position="start"
                                        timeFormat="HH:mm"
                                        value=""
                                      />
                                    }
                                  >
                                    <div
                                      className="euiDatePickerRange euiDatePickerRange--inGroup"
                                    >
                                      <EuiDatePopoverButton
                                        className="euiSuperDatePicker__startPopoverButton euiSuperDatePicker__startPopoverButton--compressed"
                                        compressed={true}
                                        dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
                                        isDisabled={false}
                                        isInvalid={true}
                                        isOpen={false}
                                        needsUpdating={false}
                                        onChange={[Function]}
                                        onPopoverClose={[Function]}
                                        onPopoverToggle={[Function]}
                                        position="start"
                                        timeFormat="HH:mm"
                                        value=""
                                      >
                                        <EuiPopover
                                          anchorPosition="downLeft"
                                          button={
                                            <button
                                              className="euiDatePopoverButton euiDatePopoverButton--start euiDatePopoverButton-isInvalid euiDatePopoverButton-compressed"
                                              data-test-subj="superDatePickerstartDatePopoverButton"
                                              disabled={false}
                                              onClick={[Function]}
                                              title="Invalid date: "
                                            >
                                              
                                            </button>
                                          }
                                          className="euiSuperDatePicker__startPopoverButton euiSuperDatePicker__startPopoverButton--compressed"
                                          closePopover={[Function]}
                                          display="block"
                                          hasArrow={true}
                                          isOpen={false}
                                          ownFocus={true}
                                          panelPaddingSize="none"
                                        >
                                          <div
                                            className="euiPopover euiPopover--anchorDownLeft euiPopover--displayBlock euiSuperDatePicker__startPopoverButton euiSuperDatePicker__startPopoverButton--compressed"
                                          >
                                            <div
                                              className="euiPopover__anchor"
                                            >
                                              <button
                                                className="euiDatePopoverButton euiDatePopoverButton--start euiDatePopoverButton-isInvalid euiDatePopoverButton-compressed"
                                                data-test-subj="superDatePickerstartDatePopoverButton"
                                                disabled={false}
                                                onClick={[Function]}
                                                title="Invalid date: "
                                              />
                                            </div>
                                          </div>
                                        </EuiPopover>
                                      </EuiDatePopoverButton>
                                      <EuiText
                                        className="euiDatePickerRange__delimeter"
                                        color="subdued"
                                        size="s"
                                      >
                                        <div
                                          className="euiText euiText--small euiDatePickerRange__delimeter"
                                        >
                                          <EuiTextColor
                                            color="subdued"
                                            component="div"
                                          >
                                            <div
                                              className="euiTextColor euiTextColor--subdued"
                                            >
                                              →
                                            </div>
                                          </EuiTextColor>
                                        </div>
                                      </EuiText>
                                      <EuiDatePopoverButton
                                        compressed={true}
                                        dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
                                        isDisabled={false}
                                        isInvalid={true}
                                        isOpen={false}
                                        needsUpdating={false}
                                        onChange={[Function]}
                                        onPopoverClose={[Function]}
                                        onPopoverToggle={[Function]}
                                        position="end"
                                        roundUp={true}
                                        timeFormat="HH:mm"
                                        value=""
                                      >
                                        <EuiPopover
                                          anchorPosition="downRight"
                                          button={
                                            <button
                                              className="euiDatePopoverButton euiDatePopoverButton--end euiDatePopoverButton-isInvalid euiDatePopoverButton-compressed"
                                              data-test-subj="superDatePickerendDatePopoverButton"
                                              disabled={false}
                                              onClick={[Function]}
                                              title="Invalid date: "
                                            >
                                              
                                            </button>
                                          }
                                          closePopover={[Function]}
                                          display="block"
                                          hasArrow={true}
                                          isOpen={false}
                                          ownFocus={true}
                                          panelPaddingSize="none"
                                        >
                                          <div
                                            className="euiPopover euiPopover--anchorDownRight euiPopover--displayBlock"
                                          >
                                            <div
                                              className="euiPopover__anchor"
                                            >
                                              <button
                                                className="euiDatePopoverButton euiDatePopoverButton--end euiDatePopoverButton-isInvalid euiDatePopoverButton-compressed"
                                                data-test-subj="superDatePickerendDatePopoverButton"
                                                disabled={false}
                                                onClick={[Function]}
                                                title="Invalid date: "
                                              />
                                            </div>
                                          </div>
                                        </EuiPopover>
                                      </EuiDatePopoverButton>
                                    </div>
                                  </EuiDatePickerRange>
                                  <EuiFormControlLayoutIcons
                                    compressed={true}
                                  />
                                </div>
                              </div>
                            </EuiFormControlLayout>
                          </div>
                        </EuiFlexItem>
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          >
                            <EuiSuperUpdateButton
                              compressed={true}
                              data-test-subj="superDatePickerApplyTimeButton"
                              isDisabled={true}
                              isLoading={false}
                              needsUpdate={false}
                              onClick={[Function]}
                              showTooltip={true}
                            >
                              <EuiToolTip
                                content={
                                  <EuiI18n
                                    default="Cannot update"
                                    token="euiSuperUpdateButton.cannotUpdateTooltip"
                                  />
                                }
                                delay="regular"
                                position="bottom"
                              >
                                <span
                                  className="euiToolTipAnchor"
                                  onKeyUp={[Function]}
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <EuiButton
                                    className="euiSuperUpdateButton"
                                    color="primary"
                                    data-test-subj="superDatePickerApplyTimeButton"
                                    iconType="refresh"
                                    isDisabled={true}
                                    isLoading={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    size="s"
                                    textProps={
                                      Object {
                                        "className": "euiSuperUpdateButton__text",
                                      }
                                    }
                                  >
                                    <EuiButtonDisplay
                                      baseClassName="euiButton"
                                      className="euiSuperUpdateButton"
                                      color="primary"
                                      data-test-subj="superDatePickerApplyTimeButton"
                                      disabled={true}
                                      element="button"
                                      iconType="refresh"
                                      isDisabled={true}
                                      isLoading={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      size="s"
                                      textProps={
                                        Object {
                                          "className": "euiSuperUpdateButton__text",
                                        }
                                      }
                                      type="button"
                                    >
                                      <button
                                        className="euiButton euiButton--primary euiButton--small euiButton-isDisabled euiSuperUpdateButton"
                                        data-test-subj="superDatePickerApplyTimeButton"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        style={
                                          Object {
                                            "minWidth": undefined,
                                          }
                                        }
                                        type="button"
                                      >
                                        <EuiButtonContent
                                          className="euiButton__content"
                                          iconGap="m"
                                          iconSide="left"
                                          iconType="refresh"
                                          isLoading={false}
                                          textProps={
                                            Object {
                                              "className": "euiButton__text euiSuperUpdateButton__text",
                                            }
                                          }
                                        >
                                          <span
                                            className="euiButtonContent euiButton__content"
                                          >
                                            <EuiIcon
                                              className="euiButtonContent__icon"
                                              color="inherit"
                                              size="m"
                                              type="refresh"
                                            >
                                              <EuiIconBeaker
                                                aria-hidden={true}
                                                className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                                focusable="false"
                                                role="img"
                                                style={null}
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                                  focusable="false"
                                                  height={16}
                                                  role="img"
                                                  style={null}
                                                  viewBox="0 0 16 16"
                                                  width={16}
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                                  />
                                                </svg>
                                              </EuiIconBeaker>
                                            </EuiIcon>
                                            <span
                                              className="euiButton__text euiSuperUpdateButton__text"
                                            >
                                              <EuiI18n
                                                default="Refresh"
                                                token="euiSuperUpdateButton.refreshButtonLabel"
                                              >
                                                Refresh
                                              </EuiI18n>
                                            </span>
                                          </span>
                                        </EuiButtonContent>
                                      </button>
                                    </EuiButtonDisplay>
                                  </EuiButton>
                                </span>
                              </EuiToolTip>
                            </EuiSuperUpdateButton>
                          </div>
                        </EuiFlexItem>
                      </div>
                    </EuiFlexGroup>
                  </EuiSuperDatePicker>
                </div>
              </EuiFlexItem>
              <EuiFlexItem
                grow={false}
              >
                <div
                  className="euiFlexItem euiFlexItem--flexGrowZero"
                >
                  <EuiToolTip
                    content="Replace dashboard"
                    delay="regular"
                    position="top"
                  >
                    <span
                      className="euiToolTipAnchor"
                      onKeyUp={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                    >
                      <EuiButtonIcon
                        aria-label="Dashboard"
                        color="primary"
                        display="base"
                        iconType="gear"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        size="s"
                      >
                        <button
                          aria-label="Dashboard"
                          className="euiButtonIcon euiButtonIcon--primary euiButtonIcon--small"
                          disabled={false}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          type="button"
                        >
                          <EuiIcon
                            aria-hidden="true"
                            className="euiButtonIcon__icon"
                            color="inherit"
                            size="m"
                            type="gear"
                          >
                            <EuiIconBeaker
                              aria-hidden={true}
                              className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                              focusable="false"
                              role="img"
                              style={null}
                            >
                              <svg
                                aria-hidden={true}
                                className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                focusable="false"
                                height={16}
                                role="img"
                                style={null}
                                viewBox="0 0 16 16"
                                width={16}
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M5.277 10.088c.02.014.04.03.057.047.582.55 1.134.812 1.666.812.586 0 1.84-.293 3.713-.88L9 6.212V2H7v4.212l-1.723 3.876Zm-.438.987L3.539 14h8.922l-1.32-2.969C9.096 11.677 7.733 12 7 12c-.74 0-1.463-.315-2.161-.925ZM6 2H5V1h6v1h-1v4l3.375 7.594A1 1 0 0 1 12.461 15H3.54a1 1 0 0 1-.914-1.406L6 6V2Z"
                                />
                              </svg>
                            </EuiIconBeaker>
                          </EuiIcon>
                        </button>
                      </EuiButtonIcon>
                    </span>
                  </EuiToolTip>
                </div>
              </EuiFlexItem>
            </div>
          </EuiFlexGroup>
        </div>
      </EuiFlexItem>
    </div>
  </EuiFlexGroup>
</DashboardControls>
`;
