// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Service breakdown panel component renders service breakdown panel 1`] = `
<SpanDetailPanel
  data={
    Object {
      "gantt": Array [
        Object {
          "hoverinfo": "none",
          "marker": Object {
            "color": "rgba(0, 0, 0, 0)",
          },
          "orientation": "h",
          "showlegend": false,
          "type": "bar",
          "width": 0.4,
          "x": Array [
            0,
          ],
          "y": Array [
            "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
          ],
        },
        Object {
          "hovertemplate": "%{x}<extra></extra>",
          "marker": Object {
            "color": "#7492e7",
          },
          "orientation": "h",
          "text": Array [
            "Error",
          ],
          "textfont": Object {
            "color": Array [
              "#c14125",
            ],
          },
          "textposition": "outside",
          "type": "bar",
          "width": 0.4,
          "x": Array [
            19.91,
          ],
          "y": Array [
            "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
          ],
        },
      ],
      "ganttMaxX": 19.91,
      "table": Array [
        Object {
          "end_time": "2020-11-10T17:55:45.239564396Z",
          "error": "Error",
          "latency": 19.91,
          "service_name": "inventory",
          "span_id": "32c641131b569afa",
          "start_time": "2020-11-10T17:55:45.219652629Z",
          "vs_benchmark": 0,
        },
      ],
    }
  }
  mode="data_prepper"
  setData={[MockFunction]}
>
  <EuiPanel
    data-test-subj="span-gantt-chart-panel"
  >
    <div
      className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
      data-test-subj="span-gantt-chart-panel"
    >
      <EuiFlexGroup
        direction="column"
        gutterSize="m"
      >
        <div
          className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--directionColumn euiFlexGroup--responsive"
        >
          <EuiFlexItem
            grow={false}
          >
            <div
              className="euiFlexItem euiFlexItem--flexGrowZero"
            >
              <EuiFlexGroup>
                <div
                  className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                >
                  <EuiFlexItem>
                    <div
                      className="euiFlexItem"
                    >
                      <PanelTitle
                        title="Spans"
                        totalItems={1}
                      >
                        <EuiText
                          size="m"
                        >
                          <div
                            className="euiText euiText--medium"
                          >
                            <span
                              className="panel-title"
                            >
                              Spans
                            </span>
                            <span
                              className="panel-title-count"
                            >
                               (1)
                            </span>
                          </div>
                        </EuiText>
                      </PanelTitle>
                    </div>
                  </EuiFlexItem>
                  <EuiFlexItem
                    grow={false}
                  >
                    <div
                      className="euiFlexItem euiFlexItem--flexGrowZero"
                    >
                      <EuiFlexGroup
                        alignItems="center"
                        gutterSize="s"
                        justifyContent="flexEnd"
                      >
                        <div
                          className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentFlexEnd euiFlexGroup--directionRow euiFlexGroup--responsive"
                        >
                          <EuiFlexItem
                            grow={false}
                          >
                            <div
                              className="euiFlexItem euiFlexItem--flexGrowZero"
                            >
                              <EuiSmallButton
                                isDisabled={true}
                                onClick={[Function]}
                              >
                                <EuiButton
                                  isDisabled={true}
                                  onClick={[Function]}
                                  size="s"
                                >
                                  <EuiButtonDisplay
                                    baseClassName="euiButton"
                                    disabled={true}
                                    element="button"
                                    isDisabled={true}
                                    onClick={[Function]}
                                    size="s"
                                    type="button"
                                  >
                                    <button
                                      className="euiButton euiButton--primary euiButton--small euiButton-isDisabled"
                                      disabled={true}
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "minWidth": undefined,
                                        }
                                      }
                                      type="button"
                                    >
                                      <EuiButtonContent
                                        className="euiButton__content"
                                        iconGap="m"
                                        iconSide="left"
                                        textProps={
                                          Object {
                                            "className": "euiButton__text",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiButtonContent euiButton__content"
                                        >
                                          <span
                                            className="euiButton__text"
                                          >
                                            Reset zoom
                                          </span>
                                        </span>
                                      </EuiButtonContent>
                                    </button>
                                  </EuiButtonDisplay>
                                </EuiButton>
                              </EuiSmallButton>
                            </div>
                          </EuiFlexItem>
                          <EuiFlexItem
                            grow={false}
                          >
                            <div
                              className="euiFlexItem euiFlexItem--flexGrowZero"
                            >
                              <EuiButtonGroup
                                idSelected="timeline"
                                legend="Select view of spans"
                                onChange={[Function]}
                                options={
                                  Array [
                                    Object {
                                      "id": "timeline",
                                      "label": "Timeline",
                                    },
                                    Object {
                                      "id": "span_list",
                                      "label": "Span list",
                                    },
                                    Object {
                                      "id": "hierarchy_span_list",
                                      "label": "Tree view",
                                    },
                                  ]
                                }
                              >
                                <fieldset
                                  className="euiButtonGroup euiButtonGroup--small euiButtonGroup--text"
                                  disabled={false}
                                >
                                  <EuiScreenReaderOnly>
                                    <legend
                                      className="euiScreenReaderOnly"
                                    >
                                      Select view of spans
                                    </legend>
                                  </EuiScreenReaderOnly>
                                  <div
                                    className="euiButtonGroup__buttons"
                                  >
                                    <EuiButtonGroupButton
                                      color="text"
                                      element="label"
                                      id="timeline"
                                      isDisabled={false}
                                      isIconOnly={false}
                                      isSelected={true}
                                      key="0"
                                      label="Timeline"
                                      name="random_html_id"
                                      onChange={[Function]}
                                      size="s"
                                    >
                                      <EuiButtonDisplay
                                        baseClassName="euiButtonGroupButton"
                                        className="euiButtonGroupButton-isSelected"
                                        color="text"
                                        element="label"
                                        fill={true}
                                        htmlFor="random_html_id"
                                        isDisabled={false}
                                        onClick={[Function]}
                                        size="s"
                                        textProps={
                                          Object {
                                            "className": "euiButtonGroupButton__textShift",
                                            "data-text": "Timeline",
                                            "ref": [Function],
                                            "title": "Timeline",
                                          }
                                        }
                                      >
                                        <label
                                          className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small euiButtonGroupButton--fill euiButtonGroupButton-isSelected"
                                          disabled={false}
                                          htmlFor="random_html_id"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "minWidth": undefined,
                                            }
                                          }
                                        >
                                          <EuiButtonContent
                                            className="euiButton__content"
                                            iconGap="m"
                                            iconSide="left"
                                            textProps={
                                              Object {
                                                "className": "euiButton__text euiButtonGroupButton__textShift",
                                                "data-text": "Timeline",
                                                "ref": [Function],
                                                "title": "Timeline",
                                              }
                                            }
                                          >
                                            <span
                                              className="euiButtonContent euiButton__content"
                                            >
                                              <span
                                                className="euiButton__text euiButtonGroupButton__textShift"
                                                data-text="Timeline"
                                                title="Timeline"
                                              >
                                                <input
                                                  checked={true}
                                                  className="euiScreenReaderOnly"
                                                  data-test-subj="timeline"
                                                  disabled={false}
                                                  id="random_html_id"
                                                  name="random_html_id"
                                                  onChange={[Function]}
                                                  type="radio"
                                                />
                                                Timeline
                                              </span>
                                            </span>
                                          </EuiButtonContent>
                                        </label>
                                      </EuiButtonDisplay>
                                    </EuiButtonGroupButton>
                                    <EuiButtonGroupButton
                                      color="text"
                                      element="label"
                                      id="span_list"
                                      isDisabled={false}
                                      isIconOnly={false}
                                      isSelected={false}
                                      key="1"
                                      label="Span list"
                                      name="random_html_id"
                                      onChange={[Function]}
                                      size="s"
                                    >
                                      <EuiButtonDisplay
                                        baseClassName="euiButtonGroupButton"
                                        className=""
                                        color="text"
                                        element="label"
                                        fill={false}
                                        htmlFor="random_html_id"
                                        isDisabled={false}
                                        onClick={[Function]}
                                        size="s"
                                        textProps={
                                          Object {
                                            "className": "euiButtonGroupButton__textShift",
                                            "data-text": "Span list",
                                            "ref": [Function],
                                            "title": "Span list",
                                          }
                                        }
                                      >
                                        <label
                                          className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small"
                                          disabled={false}
                                          htmlFor="random_html_id"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "minWidth": undefined,
                                            }
                                          }
                                        >
                                          <EuiButtonContent
                                            className="euiButton__content"
                                            iconGap="m"
                                            iconSide="left"
                                            textProps={
                                              Object {
                                                "className": "euiButton__text euiButtonGroupButton__textShift",
                                                "data-text": "Span list",
                                                "ref": [Function],
                                                "title": "Span list",
                                              }
                                            }
                                          >
                                            <span
                                              className="euiButtonContent euiButton__content"
                                            >
                                              <span
                                                className="euiButton__text euiButtonGroupButton__textShift"
                                                data-text="Span list"
                                                title="Span list"
                                              >
                                                <input
                                                  checked={false}
                                                  className="euiScreenReaderOnly"
                                                  data-test-subj="span_list"
                                                  disabled={false}
                                                  id="random_html_id"
                                                  name="random_html_id"
                                                  onChange={[Function]}
                                                  type="radio"
                                                />
                                                Span list
                                              </span>
                                            </span>
                                          </EuiButtonContent>
                                        </label>
                                      </EuiButtonDisplay>
                                    </EuiButtonGroupButton>
                                    <EuiButtonGroupButton
                                      color="text"
                                      element="label"
                                      id="hierarchy_span_list"
                                      isDisabled={false}
                                      isIconOnly={false}
                                      isSelected={false}
                                      key="2"
                                      label="Tree view"
                                      name="random_html_id"
                                      onChange={[Function]}
                                      size="s"
                                    >
                                      <EuiButtonDisplay
                                        baseClassName="euiButtonGroupButton"
                                        className=""
                                        color="text"
                                        element="label"
                                        fill={false}
                                        htmlFor="random_html_id"
                                        isDisabled={false}
                                        onClick={[Function]}
                                        size="s"
                                        textProps={
                                          Object {
                                            "className": "euiButtonGroupButton__textShift",
                                            "data-text": "Tree view",
                                            "ref": [Function],
                                            "title": "Tree view",
                                          }
                                        }
                                      >
                                        <label
                                          className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small"
                                          disabled={false}
                                          htmlFor="random_html_id"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "minWidth": undefined,
                                            }
                                          }
                                        >
                                          <EuiButtonContent
                                            className="euiButton__content"
                                            iconGap="m"
                                            iconSide="left"
                                            textProps={
                                              Object {
                                                "className": "euiButton__text euiButtonGroupButton__textShift",
                                                "data-text": "Tree view",
                                                "ref": [Function],
                                                "title": "Tree view",
                                              }
                                            }
                                          >
                                            <span
                                              className="euiButtonContent euiButton__content"
                                            >
                                              <span
                                                className="euiButton__text euiButtonGroupButton__textShift"
                                                data-text="Tree view"
                                                title="Tree view"
                                              >
                                                <input
                                                  checked={false}
                                                  className="euiScreenReaderOnly"
                                                  data-test-subj="hierarchy_span_list"
                                                  disabled={false}
                                                  id="random_html_id"
                                                  name="random_html_id"
                                                  onChange={[Function]}
                                                  type="radio"
                                                />
                                                Tree view
                                              </span>
                                            </span>
                                          </EuiButtonContent>
                                        </label>
                                      </EuiButtonDisplay>
                                    </EuiButtonGroupButton>
                                  </div>
                                </fieldset>
                              </EuiButtonGroup>
                            </div>
                          </EuiFlexItem>
                        </div>
                      </EuiFlexGroup>
                    </div>
                  </EuiFlexItem>
                </div>
              </EuiFlexGroup>
            </div>
          </EuiFlexItem>
          <EuiHorizontalRule
            margin="m"
          >
            <hr
              className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginMedium"
            />
          </EuiHorizontalRule>
          <EuiFlexItem
            grow={false}
          >
            <div
              className="euiFlexItem euiFlexItem--flexGrowZero"
            >
              <Plt
                data={
                  Array [
                    Object {
                      "hoverinfo": "none",
                      "marker": Object {
                        "color": "rgba(0, 0, 0, 0)",
                      },
                      "orientation": "h",
                      "showlegend": false,
                      "type": "bar",
                      "width": 0.4,
                      "x": Array [
                        0,
                      ],
                      "y": Array [
                        "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
                      ],
                    },
                    Object {
                      "hovertemplate": "%{x}<extra></extra>",
                      "marker": Object {
                        "color": "#7492e7",
                      },
                      "orientation": "h",
                      "text": Array [
                        "Error",
                      ],
                      "textfont": Object {
                        "color": Array [
                          "#c14125",
                        ],
                      },
                      "textposition": "outside",
                      "type": "bar",
                      "width": 0.4,
                      "x": Array [
                        19.91,
                      ],
                      "y": Array [
                        "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
                      ],
                    },
                  ]
                }
                layout={
                  Object {
                    "dragmode": "select",
                    "height": 100,
                    "margin": Object {
                      "b": 30,
                      "l": 150,
                      "r": 5,
                      "t": 30,
                    },
                    "paper_bgcolor": "rgba(0, 0, 0, 0)",
                    "plot_bgcolor": "rgba(0, 0, 0, 0)",
                    "shapes": Array [
                      Object {
                        "editable": true,
                        "fillcolor": "rgba(128, 128, 128, 0.3)",
                        "line": Object {
                          "color": "rgba(255, 0, 0, 0.6)",
                          "width": 1,
                        },
                        "type": "rect",
                        "x0": 0,
                        "x1": 21.901000000000003,
                        "xref": "x",
                        "y0": 0,
                        "y1": 1,
                        "yref": "paper",
                      },
                    ],
                    "width": 824,
                    "xaxis": Object {
                      "color": "#91989c",
                      "range": Array [
                        0,
                        21.901000000000003,
                      ],
                      "showline": true,
                      "side": "top",
                      "ticksuffix": " ms",
                    },
                    "yaxis": Object {
                      "fixedrange": true,
                      "visible": false,
                    },
                  }
                }
                onRelayout={[Function]}
                onSelectedHandler={[Function]}
              >
                <PlotlyComponent
                  config={
                    Object {
                      "displayModeBar": false,
                    }
                  }
                  data={
                    Array [
                      Object {
                        "hoverinfo": "none",
                        "marker": Object {
                          "color": "rgba(0, 0, 0, 0)",
                        },
                        "orientation": "h",
                        "showlegend": false,
                        "type": "bar",
                        "width": 0.4,
                        "x": Array [
                          0,
                        ],
                        "y": Array [
                          "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
                        ],
                      },
                      Object {
                        "hovertemplate": "%{x}<extra></extra>",
                        "marker": Object {
                          "color": "#7492e7",
                        },
                        "orientation": "h",
                        "text": Array [
                          "Error",
                        ],
                        "textfont": Object {
                          "color": Array [
                            "#c14125",
                          ],
                        },
                        "textposition": "outside",
                        "type": "bar",
                        "width": 0.4,
                        "x": Array [
                          19.91,
                        ],
                        "y": Array [
                          "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
                        ],
                      },
                    ]
                  }
                  debug={false}
                  divId="explorerPlotComponent"
                  layout={
                    Object {
                      "autosize": true,
                      "barmode": "stack",
                      "dragmode": "select",
                      "height": 100,
                      "hovermode": "closest",
                      "layout": Object {
                        "annotations": Array [
                          Object {
                            "showarrow": true,
                            "xanchor": "right",
                          },
                        ],
                      },
                      "legend": Object {
                        "orientation": "h",
                        "traceorder": "normal",
                      },
                      "margin": Object {
                        "b": 30,
                        "l": 150,
                        "r": 5,
                        "t": 30,
                      },
                      "paper_bgcolor": "rgba(0, 0, 0, 0)",
                      "plot_bgcolor": "rgba(0, 0, 0, 0)",
                      "shapes": Array [
                        Object {
                          "editable": true,
                          "fillcolor": "rgba(128, 128, 128, 0.3)",
                          "line": Object {
                            "color": "rgba(255, 0, 0, 0.6)",
                            "width": 1,
                          },
                          "type": "rect",
                          "x0": 0,
                          "x1": 21.901000000000003,
                          "xref": "x",
                          "y0": 0,
                          "y1": 1,
                          "yref": "paper",
                        },
                      ],
                      "showlegend": false,
                      "width": 824,
                      "xaxis": Object {
                        "color": "#91989c",
                        "range": Array [
                          0,
                          21.901000000000003,
                        ],
                        "showline": true,
                        "side": "top",
                        "ticksuffix": " ms",
                      },
                      "yaxis": Object {
                        "fixedrange": true,
                        "visible": false,
                      },
                    }
                  }
                  onRelayout={[Function]}
                  onSelected={[Function]}
                  style={
                    Object {
                      "height": "100%",
                      "width": "100%",
                    }
                  }
                  useResizeHandler={true}
                >
                  <div
                    id="explorerPlotComponent"
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                  />
                </PlotlyComponent>
              </Plt>
            </div>
          </EuiFlexItem>
          <EuiFlexItem
            style={
              Object {
                "maxHeight": 500,
                "overflowY": "auto",
              }
            }
          >
            <div
              className="euiFlexItem"
              style={
                Object {
                  "maxHeight": 500,
                  "overflowY": "auto",
                }
              }
            >
              <Plt
                data={
                  Array [
                    Object {
                      "hoverinfo": "none",
                      "marker": Object {
                        "color": "rgba(0, 0, 0, 0)",
                      },
                      "orientation": "h",
                      "showlegend": false,
                      "text": "0.00 ms",
                      "textposition": "outside",
                      "type": "bar",
                      "width": 0.4,
                      "x": Array [
                        0,
                      ],
                      "y": Array [
                        "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
                      ],
                    },
                    Object {
                      "hoverinfo": "none",
                      "hovertemplate": "%{x}<extra></extra>",
                      "marker": Object {
                        "color": "#7492e7",
                      },
                      "orientation": "h",
                      "text": "19.91 ms",
                      "textfont": Object {
                        "color": Array [
                          "#c14125",
                        ],
                      },
                      "textposition": "outside",
                      "type": "bar",
                      "width": 0.4,
                      "x": Array [
                        19.91,
                      ],
                      "y": Array [
                        "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
                      ],
                    },
                  ]
                }
                layout={
                  Object {
                    "height": 110,
                    "margin": Object {
                      "b": 30,
                      "l": 150,
                      "r": 5,
                      "t": 30,
                    },
                    "paper_bgcolor": "rgba(0, 0, 0, 0)",
                    "plot_bgcolor": "rgba(0, 0, 0, 0)",
                    "width": 824,
                    "xaxis": Object {
                      "color": "#91989c",
                      "range": Array [
                        0,
                        21.901000000000003,
                      ],
                      "showline": true,
                      "side": "top",
                      "ticksuffix": " ms",
                    },
                    "yaxis": Object {
                      "fixedrange": true,
                      "showgrid": false,
                      "ticktext": Array [
                        "inventory <br>HTTP GET ",
                      ],
                      "tickvals": Array [
                        "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
                      ],
                    },
                  }
                }
                onClickHandler={[Function]}
                onHoverHandler={[Function]}
                onRelayout={[Function]}
                onUnhoverHandler={[Function]}
              >
                <PlotlyComponent
                  config={
                    Object {
                      "displayModeBar": false,
                    }
                  }
                  data={
                    Array [
                      Object {
                        "hoverinfo": "none",
                        "marker": Object {
                          "color": "rgba(0, 0, 0, 0)",
                        },
                        "orientation": "h",
                        "showlegend": false,
                        "text": "0.00 ms",
                        "textposition": "outside",
                        "type": "bar",
                        "width": 0.4,
                        "x": Array [
                          0,
                        ],
                        "y": Array [
                          "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
                        ],
                      },
                      Object {
                        "hoverinfo": "none",
                        "hovertemplate": "%{x}<extra></extra>",
                        "marker": Object {
                          "color": "#7492e7",
                        },
                        "orientation": "h",
                        "text": "19.91 ms",
                        "textfont": Object {
                          "color": Array [
                            "#c14125",
                          ],
                        },
                        "textposition": "outside",
                        "type": "bar",
                        "width": 0.4,
                        "x": Array [
                          19.91,
                        ],
                        "y": Array [
                          "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
                        ],
                      },
                    ]
                  }
                  debug={false}
                  divId="explorerPlotComponent"
                  layout={
                    Object {
                      "autosize": true,
                      "barmode": "stack",
                      "height": 110,
                      "hovermode": "closest",
                      "layout": Object {
                        "annotations": Array [
                          Object {
                            "showarrow": true,
                            "xanchor": "right",
                          },
                        ],
                      },
                      "legend": Object {
                        "orientation": "h",
                        "traceorder": "normal",
                      },
                      "margin": Object {
                        "b": 30,
                        "l": 150,
                        "r": 5,
                        "t": 30,
                      },
                      "paper_bgcolor": "rgba(0, 0, 0, 0)",
                      "plot_bgcolor": "rgba(0, 0, 0, 0)",
                      "showlegend": false,
                      "width": 824,
                      "xaxis": Object {
                        "color": "#91989c",
                        "range": Array [
                          0,
                          21.901000000000003,
                        ],
                        "showline": true,
                        "side": "top",
                        "ticksuffix": " ms",
                      },
                      "yaxis": Object {
                        "fixedrange": true,
                        "showgrid": false,
                        "ticktext": Array [
                          "inventory <br>HTTP GET ",
                        ],
                        "tickvals": Array [
                          "inventory <br>HTTP GET 4dec6080-61af-11eb-aee3-ef2f84ffa4a2",
                        ],
                      },
                    }
                  }
                  onClick={[Function]}
                  onHover={[Function]}
                  onRelayout={[Function]}
                  onUnhover={[Function]}
                  style={
                    Object {
                      "height": "100%",
                      "width": "100%",
                    }
                  }
                  useResizeHandler={true}
                >
                  <div
                    id="explorerPlotComponent"
                    style={
                      Object {
                        "height": "100%",
                        "width": "100%",
                      }
                    }
                  />
                </PlotlyComponent>
              </Plt>
            </div>
          </EuiFlexItem>
        </div>
      </EuiFlexGroup>
    </div>
  </EuiPanel>
</SpanDetailPanel>
`;
